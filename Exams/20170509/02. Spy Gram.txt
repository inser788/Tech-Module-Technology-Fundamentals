using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

namespace _02_Spy_Gram
{
    class Program
    {
        static void Main(string[] args)
        {
            string inputKey = Console.ReadLine();
            var privateKey = inputKey.ToCharArray().Select(x => (int)x).ToArray();
            var pattern = @"^(TO[:]\s+[A-Z]+)[;]\s+(MESSAGE)[:]\s+(.+)[;]$";
            Dictionary<string, List<string>> encryptedMessages = new Dictionary<string, List<string>>();
            while (true)
            {
                string inputText = Console.ReadLine();
                if (inputText == "END")
                    break;
                var match = Regex.Match(inputText, pattern);
                if (!match.Success)
                    continue;
                var name = match.Groups[1].Value.ToString();
                if (!encryptedMessages.ContainsKey(name))
                {
                    encryptedMessages[name] = new List<string>();
                }
                var sentence = match.ToString().ToCharArray();
                StringBuilder sb = new StringBuilder();
                int counter = 0;
                for (int i = 0; i < sentence.Length; i++)
                {
                    var currentChar = sentence[i];
                    if (counter > privateKey.Length - 1)
                    {
                        counter = 0;
                    }
                    sb.Append((char)(currentChar + privateKey[counter] - 48));
                    counter++;

                }
                encryptedMessages[name].Add(sb.ToString());
            }
            foreach (var name in encryptedMessages.OrderBy(x=>x.Key))
            {
                foreach (var item in name.Value)
                {
                    Console.WriteLine(item);
                }
            }
        }
    }
}
